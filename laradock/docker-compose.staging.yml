version: '3'

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  percona:
    driver: ${VOLUMES_DRIVER}
  mssql:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}
  memcached:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  neo4j:
    driver: ${VOLUMES_DRIVER}
  mariadb:
    driver: ${VOLUMES_DRIVER}
  mongo:
    driver: ${VOLUMES_DRIVER}
  minio:
    driver: ${VOLUMES_DRIVER}
  rethinkdb:
    driver: ${VOLUMES_DRIVER}
  phpmyadmin:
    driver: ${VOLUMES_DRIVER}
  adminer:
    driver: ${VOLUMES_DRIVER}
  aerospike:
    driver: ${VOLUMES_DRIVER}
  caddy:
    driver: ${VOLUMES_DRIVER}
  elasticsearch:
    driver: ${VOLUMES_DRIVER}

services:

  ### Workspace Utilities ##################################
  workspace:
    build:
      context: ./workspace
      args:
      - LARADOCK_PHP_VERSION=${PHP_VERSION}
      - INSTALL_SUBVERSION=${WORKSPACE_INSTALL_SUBVERSION}
      - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
      - INSTALL_PHPDBG=${WORKSPACE_INSTALL_PHPDBG}
      - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
      - INSTALL_GMP=${WORKSPACE_INSTALL_GMP}
      - INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}
      - INSTALL_LDAP=${WORKSPACE_INSTALL_LDAP}
      - INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}
      - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
      - INSTALL_AMQP=${WORKSPACE_INSTALL_AMQP}
      - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
      - INSTALL_MSSQL=${WORKSPACE_INSTALL_MSSQL}
      - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
      - NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}
      - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
      - INSTALL_NPM_GULP=${WORKSPACE_INSTALL_NPM_GULP}
      - INSTALL_NPM_BOWER=${WORKSPACE_INSTALL_NPM_BOWER}
      - INSTALL_NPM_VUE_CLI=${WORKSPACE_INSTALL_NPM_VUE_CLI}
      - INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH}
      - INSTALL_DRUPAL_CONSOLE=${WORKSPACE_INSTALL_DRUPAL_CONSOLE}
      - INSTALL_AEROSPIKE=${WORKSPACE_INSTALL_AEROSPIKE}
      - AEROSPIKE_PHP_REPOSITORY=${AEROSPIKE_PHP_REPOSITORY}
      - INSTALL_V8JS=${WORKSPACE_INSTALL_V8JS}
      - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
      - COMPOSER_REPO_PACKAGIST=${WORKSPACE_COMPOSER_REPO_PACKAGIST}
      - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
      - INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
      - INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}
      - INSTALL_DEPLOYER=${WORKSPACE_INSTALL_DEPLOYER}
      - INSTALL_PRESTISSIMO=${WORKSPACE_INSTALL_PRESTISSIMO}
      - INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW}
      - INSTALL_MC=${WORKSPACE_INSTALL_MC}
      - INSTALL_SYMFONY=${WORKSPACE_INSTALL_SYMFONY}
      - INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON}
      - INSTALL_IMAGE_OPTIMIZERS=${WORKSPACE_INSTALL_IMAGE_OPTIMIZERS}
      - INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}
      - INSTALL_TERRAFORM=${WORKSPACE_INSTALL_TERRAFORM}
      - INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS}
      - INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT}
      - INSTALL_SWOOLE=${WORKSPACE_INSTALL_SWOOLE}
      - INSTALL_LIBPNG=${WORKSPACE_INSTALL_LIBPNG}
      - PUID=${WORKSPACE_PUID}
      - PGID=${WORKSPACE_PGID}
      - CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}
      - NODE_VERSION=${WORKSPACE_NODE_VERSION}
      - YARN_VERSION=${WORKSPACE_YARN_VERSION}
      - DRUSH_VERSION=${WORKSPACE_DRUSH_VERSION}
      - TZ=${WORKSPACE_TIMEZONE}
      - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
      - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
    volumes:
    - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    extra_hosts:
    - "dockerhost:${DOCKER_HOST_IP}"
    ports:
    - "${WORKSPACE_SSH_PORT}:22"
    tty: true
    environment:
    - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}

  ### PHP-FPM ##############################################
  php-fpm:
    build:
      context: ./php-fpm
      args:
      - LARADOCK_PHP_VERSION=${PHP_VERSION}
      - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
      - INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}
      - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
      - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
      - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
      - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
      - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
      - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
      - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
      - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
      - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
      - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
      - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
      - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
      - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
      - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
      - AEROSPIKE_PHP_REPOSITORY=${AEROSPIKE_PHP_REPOSITORY}
      - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
      - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
      - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
      - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
      - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
      - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
      - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
      - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
      - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
      - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
      - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
      - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}
    volumes:
    - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
    - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    expose:
    - "9000"
    extra_hosts:
    - "dockerhost:${DOCKER_HOST_IP}"
    environment:
    - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
    - FAKETIME=${PHP_FPM_FAKETIME}
    depends_on:
    - workspace

  ### MySQL ################################################
  mysql:
    build:
      context: ./mysql
      args:
      - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
    - MYSQL_DATABASE=${MYSQL_DATABASE}
    - MYSQL_USER=${MYSQL_USER}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    - TZ=${WORKSPACE_TIMEZONE}
    volumes:
    - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
    - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
    - "${MYSQL_PORT}:3306"
